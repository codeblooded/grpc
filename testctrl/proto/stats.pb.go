// Code generated by protoc-gen-go. DO NOT EDIT.
// source: stats.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Bucket struct {
	Start                float64  `protobuf:"fixed64,1,opt,name=start,proto3" json:"start,omitempty"`
	Count                uint64   `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Bucket) Reset()         { *m = Bucket{} }
func (m *Bucket) String() string { return proto.CompactTextString(m) }
func (*Bucket) ProtoMessage()    {}
func (*Bucket) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4756a0aec8b9d44, []int{0}
}

func (m *Bucket) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bucket.Unmarshal(m, b)
}
func (m *Bucket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bucket.Marshal(b, m, deterministic)
}
func (m *Bucket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bucket.Merge(m, src)
}
func (m *Bucket) XXX_Size() int {
	return xxx_messageInfo_Bucket.Size(m)
}
func (m *Bucket) XXX_DiscardUnknown() {
	xxx_messageInfo_Bucket.DiscardUnknown(m)
}

var xxx_messageInfo_Bucket proto.InternalMessageInfo

func (m *Bucket) GetStart() float64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *Bucket) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type Histogram struct {
	Buckets              []*Bucket `protobuf:"bytes,1,rep,name=buckets,proto3" json:"buckets,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Histogram) Reset()         { *m = Histogram{} }
func (m *Histogram) String() string { return proto.CompactTextString(m) }
func (*Histogram) ProtoMessage()    {}
func (*Histogram) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4756a0aec8b9d44, []int{1}
}

func (m *Histogram) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Histogram.Unmarshal(m, b)
}
func (m *Histogram) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Histogram.Marshal(b, m, deterministic)
}
func (m *Histogram) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Histogram.Merge(m, src)
}
func (m *Histogram) XXX_Size() int {
	return xxx_messageInfo_Histogram.Size(m)
}
func (m *Histogram) XXX_DiscardUnknown() {
	xxx_messageInfo_Histogram.DiscardUnknown(m)
}

var xxx_messageInfo_Histogram proto.InternalMessageInfo

func (m *Histogram) GetBuckets() []*Bucket {
	if m != nil {
		return m.Buckets
	}
	return nil
}

type Metric struct {
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Types that are valid to be assigned to Value:
	//	*Metric_Count
	//	*Metric_Histogram
	Value                isMetric_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Metric) Reset()         { *m = Metric{} }
func (m *Metric) String() string { return proto.CompactTextString(m) }
func (*Metric) ProtoMessage()    {}
func (*Metric) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4756a0aec8b9d44, []int{2}
}

func (m *Metric) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Metric.Unmarshal(m, b)
}
func (m *Metric) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Metric.Marshal(b, m, deterministic)
}
func (m *Metric) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Metric.Merge(m, src)
}
func (m *Metric) XXX_Size() int {
	return xxx_messageInfo_Metric.Size(m)
}
func (m *Metric) XXX_DiscardUnknown() {
	xxx_messageInfo_Metric.DiscardUnknown(m)
}

var xxx_messageInfo_Metric proto.InternalMessageInfo

func (m *Metric) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type isMetric_Value interface {
	isMetric_Value()
}

type Metric_Count struct {
	Count uint64 `protobuf:"varint,10,opt,name=count,proto3,oneof"`
}

type Metric_Histogram struct {
	Histogram *Histogram `protobuf:"bytes,11,opt,name=histogram,proto3,oneof"`
}

func (*Metric_Count) isMetric_Value() {}

func (*Metric_Histogram) isMetric_Value() {}

func (m *Metric) GetValue() isMetric_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Metric) GetCount() uint64 {
	if x, ok := m.GetValue().(*Metric_Count); ok {
		return x.Count
	}
	return 0
}

func (m *Metric) GetHistogram() *Histogram {
	if x, ok := m.GetValue().(*Metric_Histogram); ok {
		return x.Histogram
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Metric) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Metric_Count)(nil),
		(*Metric_Histogram)(nil),
	}
}

type Stats struct {
	Metrics              []*Metric `protobuf:"bytes,1,rep,name=metrics,proto3" json:"metrics,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Stats) Reset()         { *m = Stats{} }
func (m *Stats) String() string { return proto.CompactTextString(m) }
func (*Stats) ProtoMessage()    {}
func (*Stats) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4756a0aec8b9d44, []int{3}
}

func (m *Stats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Stats.Unmarshal(m, b)
}
func (m *Stats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Stats.Marshal(b, m, deterministic)
}
func (m *Stats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Stats.Merge(m, src)
}
func (m *Stats) XXX_Size() int {
	return xxx_messageInfo_Stats.Size(m)
}
func (m *Stats) XXX_DiscardUnknown() {
	xxx_messageInfo_Stats.DiscardUnknown(m)
}

var xxx_messageInfo_Stats proto.InternalMessageInfo

func (m *Stats) GetMetrics() []*Metric {
	if m != nil {
		return m.Metrics
	}
	return nil
}

type ServerStats struct {
	// wall clock time change in seconds since last reset
	TimeElapsed float64 `protobuf:"fixed64,1,opt,name=time_elapsed,json=timeElapsed,proto3" json:"time_elapsed,omitempty"`
	// change in user time (in seconds) used by the server since last reset
	TimeUser float64 `protobuf:"fixed64,2,opt,name=time_user,json=timeUser,proto3" json:"time_user,omitempty"`
	// change in server time (in seconds) used by the server process and all
	// threads since last reset
	TimeSystem float64 `protobuf:"fixed64,3,opt,name=time_system,json=timeSystem,proto3" json:"time_system,omitempty"`
	// change in total cpu time of the server (data from proc/stat)
	TotalCpuTime uint64 `protobuf:"varint,4,opt,name=total_cpu_time,json=totalCpuTime,proto3" json:"total_cpu_time,omitempty"`
	// change in idle time of the server (data from proc/stat)
	IdleCpuTime uint64 `protobuf:"varint,5,opt,name=idle_cpu_time,json=idleCpuTime,proto3" json:"idle_cpu_time,omitempty"`
	// Number of polls called inside completion queue
	CqPollCount uint64 `protobuf:"varint,6,opt,name=cq_poll_count,json=cqPollCount,proto3" json:"cq_poll_count,omitempty"`
	// Core library stats
	CoreStats            *Stats   `protobuf:"bytes,7,opt,name=core_stats,json=coreStats,proto3" json:"core_stats,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServerStats) Reset()         { *m = ServerStats{} }
func (m *ServerStats) String() string { return proto.CompactTextString(m) }
func (*ServerStats) ProtoMessage()    {}
func (*ServerStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4756a0aec8b9d44, []int{4}
}

func (m *ServerStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerStats.Unmarshal(m, b)
}
func (m *ServerStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerStats.Marshal(b, m, deterministic)
}
func (m *ServerStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerStats.Merge(m, src)
}
func (m *ServerStats) XXX_Size() int {
	return xxx_messageInfo_ServerStats.Size(m)
}
func (m *ServerStats) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerStats.DiscardUnknown(m)
}

var xxx_messageInfo_ServerStats proto.InternalMessageInfo

func (m *ServerStats) GetTimeElapsed() float64 {
	if m != nil {
		return m.TimeElapsed
	}
	return 0
}

func (m *ServerStats) GetTimeUser() float64 {
	if m != nil {
		return m.TimeUser
	}
	return 0
}

func (m *ServerStats) GetTimeSystem() float64 {
	if m != nil {
		return m.TimeSystem
	}
	return 0
}

func (m *ServerStats) GetTotalCpuTime() uint64 {
	if m != nil {
		return m.TotalCpuTime
	}
	return 0
}

func (m *ServerStats) GetIdleCpuTime() uint64 {
	if m != nil {
		return m.IdleCpuTime
	}
	return 0
}

func (m *ServerStats) GetCqPollCount() uint64 {
	if m != nil {
		return m.CqPollCount
	}
	return 0
}

func (m *ServerStats) GetCoreStats() *Stats {
	if m != nil {
		return m.CoreStats
	}
	return nil
}

// Histogram params based on grpc/support/histogram.c
type HistogramParams struct {
	Resolution           float64  `protobuf:"fixed64,1,opt,name=resolution,proto3" json:"resolution,omitempty"`
	MaxPossible          float64  `protobuf:"fixed64,2,opt,name=max_possible,json=maxPossible,proto3" json:"max_possible,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HistogramParams) Reset()         { *m = HistogramParams{} }
func (m *HistogramParams) String() string { return proto.CompactTextString(m) }
func (*HistogramParams) ProtoMessage()    {}
func (*HistogramParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4756a0aec8b9d44, []int{5}
}

func (m *HistogramParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HistogramParams.Unmarshal(m, b)
}
func (m *HistogramParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HistogramParams.Marshal(b, m, deterministic)
}
func (m *HistogramParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HistogramParams.Merge(m, src)
}
func (m *HistogramParams) XXX_Size() int {
	return xxx_messageInfo_HistogramParams.Size(m)
}
func (m *HistogramParams) XXX_DiscardUnknown() {
	xxx_messageInfo_HistogramParams.DiscardUnknown(m)
}

var xxx_messageInfo_HistogramParams proto.InternalMessageInfo

func (m *HistogramParams) GetResolution() float64 {
	if m != nil {
		return m.Resolution
	}
	return 0
}

func (m *HistogramParams) GetMaxPossible() float64 {
	if m != nil {
		return m.MaxPossible
	}
	return 0
}

// Histogram data based on grpc/support/histogram.c
type HistogramData struct {
	Bucket               []uint32 `protobuf:"varint,1,rep,packed,name=bucket,proto3" json:"bucket,omitempty"`
	MinSeen              float64  `protobuf:"fixed64,2,opt,name=min_seen,json=minSeen,proto3" json:"min_seen,omitempty"`
	MaxSeen              float64  `protobuf:"fixed64,3,opt,name=max_seen,json=maxSeen,proto3" json:"max_seen,omitempty"`
	Sum                  float64  `protobuf:"fixed64,4,opt,name=sum,proto3" json:"sum,omitempty"`
	SumOfSquares         float64  `protobuf:"fixed64,5,opt,name=sum_of_squares,json=sumOfSquares,proto3" json:"sum_of_squares,omitempty"`
	Count                float64  `protobuf:"fixed64,6,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HistogramData) Reset()         { *m = HistogramData{} }
func (m *HistogramData) String() string { return proto.CompactTextString(m) }
func (*HistogramData) ProtoMessage()    {}
func (*HistogramData) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4756a0aec8b9d44, []int{6}
}

func (m *HistogramData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HistogramData.Unmarshal(m, b)
}
func (m *HistogramData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HistogramData.Marshal(b, m, deterministic)
}
func (m *HistogramData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HistogramData.Merge(m, src)
}
func (m *HistogramData) XXX_Size() int {
	return xxx_messageInfo_HistogramData.Size(m)
}
func (m *HistogramData) XXX_DiscardUnknown() {
	xxx_messageInfo_HistogramData.DiscardUnknown(m)
}

var xxx_messageInfo_HistogramData proto.InternalMessageInfo

func (m *HistogramData) GetBucket() []uint32 {
	if m != nil {
		return m.Bucket
	}
	return nil
}

func (m *HistogramData) GetMinSeen() float64 {
	if m != nil {
		return m.MinSeen
	}
	return 0
}

func (m *HistogramData) GetMaxSeen() float64 {
	if m != nil {
		return m.MaxSeen
	}
	return 0
}

func (m *HistogramData) GetSum() float64 {
	if m != nil {
		return m.Sum
	}
	return 0
}

func (m *HistogramData) GetSumOfSquares() float64 {
	if m != nil {
		return m.SumOfSquares
	}
	return 0
}

func (m *HistogramData) GetCount() float64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type RequestResultCount struct {
	StatusCode           int32    `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	Count                int64    `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestResultCount) Reset()         { *m = RequestResultCount{} }
func (m *RequestResultCount) String() string { return proto.CompactTextString(m) }
func (*RequestResultCount) ProtoMessage()    {}
func (*RequestResultCount) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4756a0aec8b9d44, []int{7}
}

func (m *RequestResultCount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestResultCount.Unmarshal(m, b)
}
func (m *RequestResultCount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestResultCount.Marshal(b, m, deterministic)
}
func (m *RequestResultCount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestResultCount.Merge(m, src)
}
func (m *RequestResultCount) XXX_Size() int {
	return xxx_messageInfo_RequestResultCount.Size(m)
}
func (m *RequestResultCount) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestResultCount.DiscardUnknown(m)
}

var xxx_messageInfo_RequestResultCount proto.InternalMessageInfo

func (m *RequestResultCount) GetStatusCode() int32 {
	if m != nil {
		return m.StatusCode
	}
	return 0
}

func (m *RequestResultCount) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type ClientStats struct {
	// Latency histogram. Data points are in nanoseconds.
	Latencies *HistogramData `protobuf:"bytes,1,opt,name=latencies,proto3" json:"latencies,omitempty"`
	// See ServerStats for details.
	TimeElapsed float64 `protobuf:"fixed64,2,opt,name=time_elapsed,json=timeElapsed,proto3" json:"time_elapsed,omitempty"`
	TimeUser    float64 `protobuf:"fixed64,3,opt,name=time_user,json=timeUser,proto3" json:"time_user,omitempty"`
	TimeSystem  float64 `protobuf:"fixed64,4,opt,name=time_system,json=timeSystem,proto3" json:"time_system,omitempty"`
	// Number of failed requests (one row per status code seen)
	RequestResults []*RequestResultCount `protobuf:"bytes,5,rep,name=request_results,json=requestResults,proto3" json:"request_results,omitempty"`
	// Number of polls called inside completion queue
	CqPollCount uint64 `protobuf:"varint,6,opt,name=cq_poll_count,json=cqPollCount,proto3" json:"cq_poll_count,omitempty"`
	// Core library stats
	CoreStats            *Stats   `protobuf:"bytes,7,opt,name=core_stats,json=coreStats,proto3" json:"core_stats,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientStats) Reset()         { *m = ClientStats{} }
func (m *ClientStats) String() string { return proto.CompactTextString(m) }
func (*ClientStats) ProtoMessage()    {}
func (*ClientStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4756a0aec8b9d44, []int{8}
}

func (m *ClientStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientStats.Unmarshal(m, b)
}
func (m *ClientStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientStats.Marshal(b, m, deterministic)
}
func (m *ClientStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientStats.Merge(m, src)
}
func (m *ClientStats) XXX_Size() int {
	return xxx_messageInfo_ClientStats.Size(m)
}
func (m *ClientStats) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientStats.DiscardUnknown(m)
}

var xxx_messageInfo_ClientStats proto.InternalMessageInfo

func (m *ClientStats) GetLatencies() *HistogramData {
	if m != nil {
		return m.Latencies
	}
	return nil
}

func (m *ClientStats) GetTimeElapsed() float64 {
	if m != nil {
		return m.TimeElapsed
	}
	return 0
}

func (m *ClientStats) GetTimeUser() float64 {
	if m != nil {
		return m.TimeUser
	}
	return 0
}

func (m *ClientStats) GetTimeSystem() float64 {
	if m != nil {
		return m.TimeSystem
	}
	return 0
}

func (m *ClientStats) GetRequestResults() []*RequestResultCount {
	if m != nil {
		return m.RequestResults
	}
	return nil
}

func (m *ClientStats) GetCqPollCount() uint64 {
	if m != nil {
		return m.CqPollCount
	}
	return 0
}

func (m *ClientStats) GetCoreStats() *Stats {
	if m != nil {
		return m.CoreStats
	}
	return nil
}

func init() {
	proto.RegisterType((*Bucket)(nil), "proto.Bucket")
	proto.RegisterType((*Histogram)(nil), "proto.Histogram")
	proto.RegisterType((*Metric)(nil), "proto.Metric")
	proto.RegisterType((*Stats)(nil), "proto.Stats")
	proto.RegisterType((*ServerStats)(nil), "proto.ServerStats")
	proto.RegisterType((*HistogramParams)(nil), "proto.HistogramParams")
	proto.RegisterType((*HistogramData)(nil), "proto.HistogramData")
	proto.RegisterType((*RequestResultCount)(nil), "proto.RequestResultCount")
	proto.RegisterType((*ClientStats)(nil), "proto.ClientStats")
}

func init() { proto.RegisterFile("stats.proto", fileDescriptor_b4756a0aec8b9d44) }

var fileDescriptor_b4756a0aec8b9d44 = []byte{
	// 595 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x93, 0xdb, 0x6a, 0x1b, 0x3d,
	0x10, 0xc7, 0xb3, 0x3e, 0xc6, 0xb3, 0x76, 0x12, 0x44, 0x08, 0x1b, 0x3e, 0xf8, 0xe2, 0x2e, 0x85,
	0x1a, 0x0a, 0x21, 0xb8, 0x79, 0x82, 0xb8, 0x85, 0x40, 0x29, 0x0d, 0x72, 0x7a, 0xbd, 0x28, 0xeb,
	0x49, 0xbb, 0x54, 0x5a, 0xd9, 0x3a, 0x04, 0xf7, 0x11, 0xfa, 0x2c, 0x7d, 0x80, 0xbe, 0x5e, 0xd1,
	0x68, 0x1d, 0xa7, 0x31, 0xb4, 0x37, 0xbd, 0xb2, 0xf4, 0x9f, 0xf1, 0x1c, 0x7e, 0xfb, 0x17, 0xa4,
	0xd6, 0x09, 0x67, 0xcf, 0x97, 0x46, 0x3b, 0xcd, 0xba, 0xf4, 0x93, 0x5f, 0x42, 0xef, 0xca, 0x97,
	0x5f, 0xd1, 0xb1, 0x63, 0xe8, 0x5a, 0x27, 0x8c, 0xcb, 0x92, 0x71, 0x32, 0x49, 0x78, 0xbc, 0x04,
	0xb5, 0xd4, 0xbe, 0x76, 0x59, 0x6b, 0x9c, 0x4c, 0x3a, 0x3c, 0x5e, 0xf2, 0x4b, 0x18, 0x5c, 0x57,
	0xd6, 0xe9, 0xcf, 0x46, 0x28, 0xf6, 0x0a, 0xfa, 0x77, 0x54, 0xc2, 0x66, 0xc9, 0xb8, 0x3d, 0x49,
	0xa7, 0xa3, 0xd8, 0xe2, 0x3c, 0x16, 0xe6, 0x9b, 0x68, 0xae, 0xa1, 0xf7, 0x01, 0x9d, 0xa9, 0x4a,
	0xc6, 0xa0, 0x53, 0x0b, 0x85, 0xd4, 0x6a, 0xc0, 0xe9, 0xcc, 0x4e, 0x36, 0x9d, 0x20, 0x74, 0xba,
	0xde, 0x6b, 0x7a, 0xb1, 0x0b, 0x18, 0x7c, 0xd9, 0xf4, 0xca, 0xd2, 0x71, 0x32, 0x49, 0xa7, 0x47,
	0x4d, 0x83, 0xc7, 0x19, 0xae, 0xf7, 0xf8, 0x36, 0xe9, 0xaa, 0x0f, 0xdd, 0x07, 0x21, 0x3d, 0xe6,
	0x17, 0xd0, 0x9d, 0x87, 0x95, 0xc3, 0x88, 0x8a, 0x3a, 0x3f, 0x1f, 0x31, 0xce, 0xc3, 0x37, 0xd1,
	0xfc, 0x7b, 0x0b, 0xd2, 0x39, 0x9a, 0x07, 0x34, 0xf1, 0x8f, 0x2f, 0x60, 0xe8, 0x2a, 0x85, 0x05,
	0x4a, 0xb1, 0xb4, 0xb8, 0x68, 0xd8, 0xa4, 0x41, 0x7b, 0x17, 0x25, 0xf6, 0x1f, 0x0c, 0x28, 0xc5,
	0x5b, 0x34, 0x44, 0x29, 0xe1, 0xfb, 0x41, 0xf8, 0x64, 0xd1, 0xb0, 0x33, 0xa0, 0xdc, 0xc2, 0x7e,
	0xb3, 0x0e, 0x55, 0xd6, 0xa6, 0x30, 0x04, 0x69, 0x4e, 0x0a, 0x7b, 0x09, 0x07, 0x4e, 0x3b, 0x21,
	0x8b, 0x72, 0xe9, 0x8b, 0xa0, 0x67, 0x1d, 0x02, 0x3d, 0x24, 0x75, 0xb6, 0xf4, 0xb7, 0x95, 0x42,
	0x96, 0xc3, 0xa8, 0x5a, 0x48, 0xdc, 0x26, 0x75, 0x29, 0x29, 0x0d, 0xe2, 0x93, 0x9c, 0x72, 0x55,
	0x2c, 0xb5, 0x94, 0x45, 0xe4, 0xd8, 0x8b, 0x39, 0xe5, 0xea, 0x46, 0x4b, 0x39, 0x23, 0x96, 0xaf,
	0x01, 0x4a, 0x6d, 0xb0, 0x20, 0x23, 0x64, 0x7d, 0x82, 0x39, 0x6c, 0x50, 0xd0, 0xc2, 0x7c, 0x10,
	0xe2, 0x74, 0xcc, 0x6f, 0xe1, 0xf0, 0x11, 0xf0, 0x8d, 0x30, 0x42, 0x59, 0xf6, 0x3f, 0x80, 0x41,
	0xab, 0xa5, 0x77, 0x95, 0xae, 0x1b, 0x18, 0x4f, 0x94, 0x80, 0x4b, 0x89, 0x75, 0xb1, 0xd4, 0xd6,
	0x56, 0x77, 0x12, 0x1b, 0x1c, 0xa9, 0x12, 0xeb, 0x9b, 0x46, 0xca, 0x7f, 0x24, 0x30, 0x7a, 0x2c,
	0xfb, 0x56, 0x38, 0xc1, 0x4e, 0xa0, 0x17, 0x1d, 0x42, 0xdf, 0x66, 0xc4, 0x9b, 0x1b, 0x3b, 0x85,
	0x7d, 0x55, 0xd5, 0x85, 0x45, 0xac, 0x9b, 0x42, 0x7d, 0x55, 0xd5, 0x73, 0xc4, 0x9a, 0x42, 0x62,
	0x1d, 0x43, 0xed, 0x26, 0x24, 0xd6, 0x14, 0x3a, 0x82, 0xb6, 0xf5, 0x8a, 0x28, 0x26, 0x3c, 0x1c,
	0x03, 0x62, 0xeb, 0x55, 0xa1, 0xef, 0x0b, 0xbb, 0xf2, 0xc2, 0xa0, 0x25, 0x7a, 0x09, 0x1f, 0x5a,
	0xaf, 0x3e, 0xde, 0xcf, 0xa3, 0xb6, 0x35, 0x7a, 0x2f, 0xda, 0x3f, 0x1a, 0xfd, 0x3d, 0x30, 0x8e,
	0x2b, 0x8f, 0xd6, 0x71, 0xb4, 0x5e, 0xba, 0x88, 0xf1, 0x2c, 0x3e, 0x25, 0x6f, 0x8b, 0x52, 0x2f,
	0xa2, 0x8b, 0xbb, 0x1c, 0xa2, 0x34, 0xd3, 0x0b, 0xfc, 0xfd, 0xd5, 0xb4, 0x37, 0xc5, 0x7e, 0xb6,
	0x20, 0x9d, 0xc9, 0x0a, 0x6b, 0x17, 0xcd, 0x35, 0x85, 0x81, 0x14, 0x0e, 0xeb, 0xb2, 0x42, 0x4b,
	0x45, 0xd2, 0xe9, 0xf1, 0x73, 0x67, 0x07, 0x42, 0x7c, 0x9b, 0xb6, 0x63, 0xc8, 0xd6, 0x5f, 0x0c,
	0xd9, 0xfe, 0xb3, 0x21, 0x3b, 0x3b, 0x86, 0xbc, 0x82, 0x43, 0x13, 0x37, 0x2e, 0x0c, 0xad, 0x1c,
	0x70, 0x85, 0x27, 0x73, 0xda, 0x8c, 0xb6, 0xcb, 0x83, 0x1f, 0x98, 0xa7, 0x9a, 0xfd, 0xe7, 0x56,
	0xbc, 0xeb, 0x91, 0xfe, 0xe6, 0x57, 0x00, 0x00, 0x00, 0xff, 0xff, 0x03, 0xfa, 0x66, 0xd2, 0xc2,
	0x04, 0x00, 0x00,
}

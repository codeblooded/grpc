// Code generated by protoc-gen-go. DO NOT EDIT.
// source: testctrl.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TestStatus int32

const (
	TestStatus_QUEUED   TestStatus = 0
	TestStatus_BUILDING TestStatus = 1
	TestStatus_RUNNING  TestStatus = 2
	TestStatus_PASS     TestStatus = 3
	TestStatus_FAIL     TestStatus = 4
	TestStatus_ERROR    TestStatus = 5
)

var TestStatus_name = map[int32]string{
	0: "QUEUED",
	1: "BUILDING",
	2: "RUNNING",
	3: "PASS",
	4: "FAIL",
	5: "ERROR",
}

var TestStatus_value = map[string]int32{
	"QUEUED":   0,
	"BUILDING": 1,
	"RUNNING":  2,
	"PASS":     3,
	"FAIL":     4,
	"ERROR":    5,
}

func (x TestStatus) String() string {
	return proto.EnumName(TestStatus_name, int32(x))
}

func (TestStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_423bc9570d236920, []int{0}
}

type UserInfo struct {
	// The GitHub username that is responsible for an operation.
	Requester string `protobuf:"bytes,1,opt,name=requester,proto3" json:"requester,omitempty"`
	// The GitHub username that has approved the operation this operation, since
	// the requester alone was not authorized to perform the operation.
	Approver             string   `protobuf:"bytes,2,opt,name=approver,proto3" json:"approver,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserInfo) Reset()         { *m = UserInfo{} }
func (m *UserInfo) String() string { return proto.CompactTextString(m) }
func (*UserInfo) ProtoMessage()    {}
func (*UserInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_423bc9570d236920, []int{0}
}

func (m *UserInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserInfo.Unmarshal(m, b)
}
func (m *UserInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserInfo.Marshal(b, m, deterministic)
}
func (m *UserInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserInfo.Merge(m, src)
}
func (m *UserInfo) XXX_Size() int {
	return xxx_messageInfo_UserInfo.Size(m)
}
func (m *UserInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_UserInfo.DiscardUnknown(m)
}

var xxx_messageInfo_UserInfo proto.InternalMessageInfo

func (m *UserInfo) GetRequester() string {
	if m != nil {
		return m.Requester
	}
	return ""
}

func (m *UserInfo) GetApprover() string {
	if m != nil {
		return m.Approver
	}
	return ""
}

type VCSInfo struct {
	// The GitHub URL of the repository under test. This URL must service requests
	// from `git clone`, since it will be used for building.
	RepositoryUrl string `protobuf:"bytes,1,opt,name=repository_url,json=repositoryUrl,proto3" json:"repository_url,omitempty"`
	// The SHA-1 for a specific commit that will be built and tested.
	CommitHash string `protobuf:"bytes,2,opt,name=commit_hash,json=commitHash,proto3" json:"commit_hash,omitempty"`
	// An optional reference to an open pull request number.  This currently only
	// adds metadata, but it is reserved for future use.
	PullRequestNumber    string   `protobuf:"bytes,3,opt,name=pull_request_number,json=pullRequestNumber,proto3" json:"pull_request_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VCSInfo) Reset()         { *m = VCSInfo{} }
func (m *VCSInfo) String() string { return proto.CompactTextString(m) }
func (*VCSInfo) ProtoMessage()    {}
func (*VCSInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_423bc9570d236920, []int{1}
}

func (m *VCSInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VCSInfo.Unmarshal(m, b)
}
func (m *VCSInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VCSInfo.Marshal(b, m, deterministic)
}
func (m *VCSInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VCSInfo.Merge(m, src)
}
func (m *VCSInfo) XXX_Size() int {
	return xxx_messageInfo_VCSInfo.Size(m)
}
func (m *VCSInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_VCSInfo.DiscardUnknown(m)
}

var xxx_messageInfo_VCSInfo proto.InternalMessageInfo

func (m *VCSInfo) GetRepositoryUrl() string {
	if m != nil {
		return m.RepositoryUrl
	}
	return ""
}

func (m *VCSInfo) GetCommitHash() string {
	if m != nil {
		return m.CommitHash
	}
	return ""
}

func (m *VCSInfo) GetPullRequestNumber() string {
	if m != nil {
		return m.PullRequestNumber
	}
	return ""
}

type CacheSettings struct {
	// Disables the binary cache, forcing all code to be cleanly built.
	// Defaults to false.
	DisableBinCache bool `protobuf:"varint,1,opt,name=disable_bin_cache,json=disableBinCache,proto3" json:"disable_bin_cache,omitempty"`
	// Disables the container image cache, forcing all layers to be rebuilt.
	// Defaults to false.
	DisableContainerCache bool     `protobuf:"varint,2,opt,name=disable_container_cache,json=disableContainerCache,proto3" json:"disable_container_cache,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *CacheSettings) Reset()         { *m = CacheSettings{} }
func (m *CacheSettings) String() string { return proto.CompactTextString(m) }
func (*CacheSettings) ProtoMessage()    {}
func (*CacheSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_423bc9570d236920, []int{2}
}

func (m *CacheSettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CacheSettings.Unmarshal(m, b)
}
func (m *CacheSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CacheSettings.Marshal(b, m, deterministic)
}
func (m *CacheSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CacheSettings.Merge(m, src)
}
func (m *CacheSettings) XXX_Size() int {
	return xxx_messageInfo_CacheSettings.Size(m)
}
func (m *CacheSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_CacheSettings.DiscardUnknown(m)
}

var xxx_messageInfo_CacheSettings proto.InternalMessageInfo

func (m *CacheSettings) GetDisableBinCache() bool {
	if m != nil {
		return m.DisableBinCache
	}
	return false
}

func (m *CacheSettings) GetDisableContainerCache() bool {
	if m != nil {
		return m.DisableContainerCache
	}
	return false
}

type RunTestsRequest struct {
	// Encapsulates information about the requesting user.
	UserInfo *UserInfo `protobuf:"bytes,1,opt,name=user_info,json=userInfo,proto3" json:"user_info,omitempty"`
	// The version control configuration, which sets the repository and snapshot
	// for building appropriate containers and executing the tests.
	VcsInfo *VCSInfo `protobuf:"bytes,2,opt,name=vcs_info,json=vcsInfo,proto3" json:"vcs_info,omitempty"`
	// Configures the caching system, providing options to invalidate it.
	CacheSettings *CacheSettings `protobuf:"bytes,3,opt,name=cache_settings,json=cacheSettings,proto3" json:"cache_settings,omitempty"`
	// The test scenarios to run.
	Scenarios            []*Scenario `protobuf:"bytes,4,rep,name=scenarios,proto3" json:"scenarios,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *RunTestsRequest) Reset()         { *m = RunTestsRequest{} }
func (m *RunTestsRequest) String() string { return proto.CompactTextString(m) }
func (*RunTestsRequest) ProtoMessage()    {}
func (*RunTestsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_423bc9570d236920, []int{3}
}

func (m *RunTestsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunTestsRequest.Unmarshal(m, b)
}
func (m *RunTestsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunTestsRequest.Marshal(b, m, deterministic)
}
func (m *RunTestsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunTestsRequest.Merge(m, src)
}
func (m *RunTestsRequest) XXX_Size() int {
	return xxx_messageInfo_RunTestsRequest.Size(m)
}
func (m *RunTestsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RunTestsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RunTestsRequest proto.InternalMessageInfo

func (m *RunTestsRequest) GetUserInfo() *UserInfo {
	if m != nil {
		return m.UserInfo
	}
	return nil
}

func (m *RunTestsRequest) GetVcsInfo() *VCSInfo {
	if m != nil {
		return m.VcsInfo
	}
	return nil
}

func (m *RunTestsRequest) GetCacheSettings() *CacheSettings {
	if m != nil {
		return m.CacheSettings
	}
	return nil
}

func (m *RunTestsRequest) GetScenarios() []*Scenario {
	if m != nil {
		return m.Scenarios
	}
	return nil
}

type RunTestsResponse struct {
	// Unique identifier that can be used to differentiate a request from another
	// in order to dequeue the set of tests before building and running or view
	// the results.  Note this identifier should be indefinitely valid.
	Uid                  string   `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RunTestsResponse) Reset()         { *m = RunTestsResponse{} }
func (m *RunTestsResponse) String() string { return proto.CompactTextString(m) }
func (*RunTestsResponse) ProtoMessage()    {}
func (*RunTestsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_423bc9570d236920, []int{4}
}

func (m *RunTestsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunTestsResponse.Unmarshal(m, b)
}
func (m *RunTestsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunTestsResponse.Marshal(b, m, deterministic)
}
func (m *RunTestsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunTestsResponse.Merge(m, src)
}
func (m *RunTestsResponse) XXX_Size() int {
	return xxx_messageInfo_RunTestsResponse.Size(m)
}
func (m *RunTestsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RunTestsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RunTestsResponse proto.InternalMessageInfo

func (m *RunTestsResponse) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

type TestInvocation struct {
	Uid                  string           `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Status               TestStatus       `protobuf:"varint,2,opt,name=status,proto3,enum=proto.TestStatus" json:"status,omitempty"`
	Request              *RunTestsRequest `protobuf:"bytes,3,opt,name=request,proto3" json:"request,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TestInvocation) Reset()         { *m = TestInvocation{} }
func (m *TestInvocation) String() string { return proto.CompactTextString(m) }
func (*TestInvocation) ProtoMessage()    {}
func (*TestInvocation) Descriptor() ([]byte, []int) {
	return fileDescriptor_423bc9570d236920, []int{5}
}

func (m *TestInvocation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestInvocation.Unmarshal(m, b)
}
func (m *TestInvocation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestInvocation.Marshal(b, m, deterministic)
}
func (m *TestInvocation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestInvocation.Merge(m, src)
}
func (m *TestInvocation) XXX_Size() int {
	return xxx_messageInfo_TestInvocation.Size(m)
}
func (m *TestInvocation) XXX_DiscardUnknown() {
	xxx_messageInfo_TestInvocation.DiscardUnknown(m)
}

var xxx_messageInfo_TestInvocation proto.InternalMessageInfo

func (m *TestInvocation) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *TestInvocation) GetStatus() TestStatus {
	if m != nil {
		return m.Status
	}
	return TestStatus_QUEUED
}

func (m *TestInvocation) GetRequest() *RunTestsRequest {
	if m != nil {
		return m.Request
	}
	return nil
}

type ListTestsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListTestsRequest) Reset()         { *m = ListTestsRequest{} }
func (m *ListTestsRequest) String() string { return proto.CompactTextString(m) }
func (*ListTestsRequest) ProtoMessage()    {}
func (*ListTestsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_423bc9570d236920, []int{6}
}

func (m *ListTestsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTestsRequest.Unmarshal(m, b)
}
func (m *ListTestsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTestsRequest.Marshal(b, m, deterministic)
}
func (m *ListTestsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTestsRequest.Merge(m, src)
}
func (m *ListTestsRequest) XXX_Size() int {
	return xxx_messageInfo_ListTestsRequest.Size(m)
}
func (m *ListTestsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTestsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListTestsRequest proto.InternalMessageInfo

type ListTestsResponse struct {
	Invocations          []*TestInvocation `protobuf:"bytes,1,rep,name=invocations,proto3" json:"invocations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ListTestsResponse) Reset()         { *m = ListTestsResponse{} }
func (m *ListTestsResponse) String() string { return proto.CompactTextString(m) }
func (*ListTestsResponse) ProtoMessage()    {}
func (*ListTestsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_423bc9570d236920, []int{7}
}

func (m *ListTestsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTestsResponse.Unmarshal(m, b)
}
func (m *ListTestsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTestsResponse.Marshal(b, m, deterministic)
}
func (m *ListTestsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTestsResponse.Merge(m, src)
}
func (m *ListTestsResponse) XXX_Size() int {
	return xxx_messageInfo_ListTestsResponse.Size(m)
}
func (m *ListTestsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTestsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListTestsResponse proto.InternalMessageInfo

func (m *ListTestsResponse) GetInvocations() []*TestInvocation {
	if m != nil {
		return m.Invocations
	}
	return nil
}

func init() {
	proto.RegisterEnum("proto.TestStatus", TestStatus_name, TestStatus_value)
	proto.RegisterType((*UserInfo)(nil), "proto.UserInfo")
	proto.RegisterType((*VCSInfo)(nil), "proto.VCSInfo")
	proto.RegisterType((*CacheSettings)(nil), "proto.CacheSettings")
	proto.RegisterType((*RunTestsRequest)(nil), "proto.RunTestsRequest")
	proto.RegisterType((*RunTestsResponse)(nil), "proto.RunTestsResponse")
	proto.RegisterType((*TestInvocation)(nil), "proto.TestInvocation")
	proto.RegisterType((*ListTestsRequest)(nil), "proto.ListTestsRequest")
	proto.RegisterType((*ListTestsResponse)(nil), "proto.ListTestsResponse")
}

func init() { proto.RegisterFile("testctrl.proto", fileDescriptor_423bc9570d236920) }

var fileDescriptor_423bc9570d236920 = []byte{
	// 565 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0xc1, 0x6f, 0xd3, 0x30,
	0x18, 0xc5, 0x97, 0x76, 0x5b, 0x93, 0xaf, 0x34, 0x4d, 0x0d, 0x63, 0x51, 0x85, 0xc4, 0x14, 0x81,
	0xc4, 0x26, 0xa8, 0x50, 0x91, 0xe0, 0xb0, 0x0b, 0x5b, 0x5b, 0xa0, 0x52, 0x55, 0xc0, 0x21, 0x5c,
	0xa3, 0x34, 0xf3, 0xa8, 0xa5, 0xd4, 0x0e, 0xb6, 0x53, 0x89, 0x13, 0xe2, 0xc8, 0x3f, 0xc8, 0xdf,
	0x83, 0xe2, 0x3a, 0x4d, 0xb7, 0xc1, 0x29, 0xc9, 0xf7, 0x7e, 0x9f, 0xf3, 0xde, 0x33, 0xb8, 0x8a,
	0x48, 0x95, 0x2a, 0x91, 0x0d, 0x72, 0xc1, 0x15, 0x47, 0x07, 0xfa, 0xd1, 0xef, 0xa4, 0x9c, 0x29,
	0xc1, 0xcd, 0x34, 0x18, 0x83, 0x1d, 0x49, 0x22, 0xa6, 0xec, 0x9a, 0xa3, 0x47, 0xe0, 0x08, 0xf2,
	0xbd, 0x20, 0x52, 0x11, 0xe1, 0x5b, 0x27, 0xd6, 0x33, 0x07, 0xd7, 0x03, 0xd4, 0x07, 0x3b, 0xc9,
	0x73, 0xc1, 0xd7, 0x44, 0xf8, 0x0d, 0x2d, 0x6e, 0xbf, 0x83, 0x5f, 0x16, 0xb4, 0xbe, 0x8e, 0x42,
	0x7d, 0xca, 0x53, 0x70, 0x05, 0xc9, 0xb9, 0xa4, 0x8a, 0x8b, 0x1f, 0x71, 0x21, 0x32, 0x73, 0x54,
	0xa7, 0x9e, 0x46, 0x22, 0x43, 0x8f, 0xa1, 0x9d, 0xf2, 0xd5, 0x8a, 0xaa, 0x78, 0x99, 0xc8, 0xa5,
	0x39, 0x11, 0x36, 0xa3, 0x0f, 0x89, 0x5c, 0xa2, 0x01, 0xdc, 0xcf, 0x8b, 0x2c, 0x8b, 0x8d, 0x83,
	0x98, 0x15, 0xab, 0x05, 0x11, 0x7e, 0x53, 0x83, 0xbd, 0x52, 0xc2, 0x1b, 0x65, 0xae, 0x85, 0x40,
	0x42, 0x67, 0x94, 0xa4, 0x4b, 0x12, 0x12, 0xa5, 0x28, 0xfb, 0x26, 0xd1, 0x19, 0xf4, 0xae, 0xa8,
	0x4c, 0x16, 0x19, 0x89, 0x17, 0x94, 0xc5, 0x69, 0x29, 0x6a, 0x2f, 0x36, 0xee, 0x1a, 0xe1, 0x92,
	0x32, 0xbd, 0x83, 0x5e, 0xc3, 0x71, 0xc5, 0x96, 0xfd, 0x24, 0x94, 0x11, 0x61, 0x36, 0x1a, 0x7a,
	0xe3, 0xc8, 0xc8, 0xa3, 0x4a, 0xd5, 0x7b, 0xc1, 0x1f, 0x0b, 0xba, 0xb8, 0x60, 0x5f, 0x88, 0x54,
	0xd2, 0xd8, 0x41, 0xcf, 0xc1, 0x29, 0x24, 0x11, 0x31, 0x65, 0xd7, 0x5c, 0xff, 0xaf, 0x3d, 0xec,
	0x6e, 0xda, 0x1e, 0x54, 0x55, 0x63, 0xbb, 0xa8, 0x4a, 0x3f, 0x05, 0x7b, 0x9d, 0xca, 0x0d, 0xdc,
	0xd0, 0xb0, 0x6b, 0x60, 0x53, 0x28, 0x6e, 0xad, 0x53, 0xa9, 0xd1, 0x73, 0x70, 0xb5, 0xa5, 0x58,
	0x9a, 0x88, 0xba, 0x8c, 0xf6, 0xf0, 0x81, 0x59, 0xb8, 0x11, 0x1f, 0x77, 0xd2, 0x1b, 0x6d, 0xbc,
	0x00, 0x47, 0xa6, 0x84, 0x25, 0x82, 0x72, 0xe9, 0xef, 0x9f, 0x34, 0x77, 0x5c, 0x85, 0x66, 0x8e,
	0x6b, 0x22, 0x78, 0x02, 0x5e, 0x9d, 0x4b, 0xe6, 0x9c, 0x49, 0x82, 0x3c, 0x68, 0x16, 0xf4, 0xca,
	0x5c, 0x67, 0xf9, 0x1a, 0xfc, 0x04, 0xb7, 0x44, 0xa6, 0x6c, 0xcd, 0xd3, 0x44, 0x51, 0xce, 0xee,
	0x32, 0xe8, 0x14, 0x0e, 0xa5, 0x4a, 0x54, 0x21, 0x75, 0x3c, 0x77, 0xd8, 0x33, 0x7f, 0x2d, 0x17,
	0x43, 0x2d, 0x60, 0x03, 0xa0, 0x97, 0xd0, 0x32, 0xb7, 0x6d, 0x92, 0x3d, 0x34, 0xec, 0xad, 0x8a,
	0x71, 0x85, 0x05, 0x08, 0xbc, 0x19, 0x95, 0x6a, 0x57, 0x0c, 0x66, 0xd0, 0xdb, 0x99, 0x19, 0xef,
	0x6f, 0xa0, 0x4d, 0xb7, 0x2e, 0xa5, 0x6f, 0xe9, 0x02, 0x8e, 0x76, 0xac, 0xd4, 0x19, 0xf0, 0x2e,
	0x79, 0x86, 0x01, 0x6a, 0xa7, 0x08, 0xe0, 0xf0, 0x73, 0x34, 0x89, 0x26, 0x63, 0x6f, 0x0f, 0xdd,
	0x03, 0xfb, 0x32, 0x9a, 0xce, 0xc6, 0xd3, 0xf9, 0x7b, 0xcf, 0x42, 0x6d, 0x68, 0xe1, 0x68, 0x3e,
	0x2f, 0x3f, 0x1a, 0xc8, 0x86, 0xfd, 0x4f, 0x17, 0x61, 0xe8, 0x35, 0xcb, 0xb7, 0x77, 0x17, 0xd3,
	0x99, 0xb7, 0x8f, 0x1c, 0x38, 0x98, 0x60, 0xfc, 0x11, 0x7b, 0x07, 0xc3, 0xdf, 0x16, 0xd8, 0xe5,
	0xa1, 0x23, 0x25, 0x32, 0x74, 0x0e, 0x76, 0x15, 0x0f, 0xfd, 0x27, 0x6f, 0xff, 0xdf, 0x46, 0x83,
	0x3d, 0xf4, 0x16, 0x9c, 0x6d, 0x56, 0x74, 0x6c, 0xa8, 0xdb, 0x8d, 0xf4, 0xfd, 0xbb, 0xc2, 0xa6,
	0x96, 0x60, 0x6f, 0x71, 0xa8, 0xa5, 0x57, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0xf1, 0x1d, 0xd0,
	0x1e, 0x2f, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TestCtrlClient is the client API for TestCtrl service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TestCtrlClient interface {
	// Enqueues the building and execution of a set of test scenarios.  Due to
	// limited capacity and unequal priorities, tests will likely not be run in
	// the order they are received.
	RunTests(ctx context.Context, in *RunTestsRequest, opts ...grpc.CallOption) (*TestInvocation, error)
	// List all running or queued tests.
	ListTests(ctx context.Context, in *ListTestsRequest, opts ...grpc.CallOption) (*ListTestsResponse, error)
}

type testCtrlClient struct {
	cc grpc.ClientConnInterface
}

func NewTestCtrlClient(cc grpc.ClientConnInterface) TestCtrlClient {
	return &testCtrlClient{cc}
}

func (c *testCtrlClient) RunTests(ctx context.Context, in *RunTestsRequest, opts ...grpc.CallOption) (*TestInvocation, error) {
	out := new(TestInvocation)
	err := c.cc.Invoke(ctx, "/proto.TestCtrl/RunTests", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *testCtrlClient) ListTests(ctx context.Context, in *ListTestsRequest, opts ...grpc.CallOption) (*ListTestsResponse, error) {
	out := new(ListTestsResponse)
	err := c.cc.Invoke(ctx, "/proto.TestCtrl/ListTests", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TestCtrlServer is the server API for TestCtrl service.
type TestCtrlServer interface {
	// Enqueues the building and execution of a set of test scenarios.  Due to
	// limited capacity and unequal priorities, tests will likely not be run in
	// the order they are received.
	RunTests(context.Context, *RunTestsRequest) (*TestInvocation, error)
	// List all running or queued tests.
	ListTests(context.Context, *ListTestsRequest) (*ListTestsResponse, error)
}

// UnimplementedTestCtrlServer can be embedded to have forward compatible implementations.
type UnimplementedTestCtrlServer struct {
}

func (*UnimplementedTestCtrlServer) RunTests(ctx context.Context, req *RunTestsRequest) (*TestInvocation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RunTests not implemented")
}
func (*UnimplementedTestCtrlServer) ListTests(ctx context.Context, req *ListTestsRequest) (*ListTestsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListTests not implemented")
}

func RegisterTestCtrlServer(s *grpc.Server, srv TestCtrlServer) {
	s.RegisterService(&_TestCtrl_serviceDesc, srv)
}

func _TestCtrl_RunTests_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RunTestsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestCtrlServer).RunTests(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.TestCtrl/RunTests",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestCtrlServer).RunTests(ctx, req.(*RunTestsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TestCtrl_ListTests_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListTestsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestCtrlServer).ListTests(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.TestCtrl/ListTests",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestCtrlServer).ListTests(ctx, req.(*ListTestsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TestCtrl_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.TestCtrl",
	HandlerType: (*TestCtrlServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RunTests",
			Handler:    _TestCtrl_RunTests_Handler,
		},
		{
			MethodName: "ListTests",
			Handler:    _TestCtrl_ListTests_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "testctrl.proto",
}
